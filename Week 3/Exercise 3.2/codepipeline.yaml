AWSTemplateFormatVersion: '2010-09-09'
Metadata: 
  License: Apache-2.0
Description: Deploying on AWS Stack CodePipeline
Parameters:
  SourceBucket:
    Type: String
  CodeCommitRepoName:
    Type: String
Resources:
  AppPipeline: 
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ci-cd-pipeline
      RoleArn: !GetAtt CodePipelineTrustRole.Arn
      Stages: 
      - Name: Source
        Actions:
        - ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeCommit
            Version: 1
          Configuration:
            BranchName: dev
            PollForSourceChanges: false
            RepositoryName: !Ref CodeCommitRepoName
          InputArtifacts: []
          Name: Source
          OutputArtifacts:
          - Name: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - SourceArtifact
          RunOrder: 1
      - Name: Build
        Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: UnitTests
          InputArtifacts:
          - Name: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - SourceArtifact
          Name: Build
          OutputArtifacts:
          - Name: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - BuildArtifact
          RunOrder: 1
      - Name: Provision
        Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: Prepare
          InputArtifacts:
          - Name: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - SourceArtifact
          Name: Prepare
          OutputArtifacts:
          - Name: MyAppPre
          RunOrder: 1 
        - ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !GetAtt CloudFormationTrustRole.Arn
            StackName: TEST-Stack
            TemplatePath: MyAppPre::Templates/edx-provision.yaml
            TemplateConfiguration: MyAppPre::Templates/edx-provision-configuration.json
          InputArtifacts:
          - Name: MyAppPre
          Name: ProvisionTestEnvironment
          OutputArtifacts: []
          RunOrder: 2         
      ArtifactStore: 
        Type: S3
        Location: !Ref SourceBucket

  CodePipelineTrustRole:
    Type: AWS::IAM::Role 
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Sid: 1
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            - s3:PutObject
            Effect: Allow
            Resource:
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'SourceBucket'
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'SourceBucket'
                - /*
          - Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Effect: Allow
            Resource:
            - !Join
              - ':'
              - - arn
                - aws
                - codecommit
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - !Ref CodeCommitRepoName
          - Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - codebuild:StopBuild
            Effect: Allow
            Resource:
            - !Join
              - ':'
              - - arn
                - aws
                - codebuild
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - project/UnitTests
            - !Join
              - ':'
              - - arn
                - aws
                - codebuild
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - project/Prepare   
          - Action:
            - ssm:GetParameter
            - cloudformation:*
            Effect: Allow
            Resource: "*"
          - Action:
            - kms:GenerateDataKey*
            - kms:Encrypt
            - kms:Decrypt
            Effect: Allow
            Resource:
            - !Join
              - ':'
              - - arn:aws:kms
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - !Join
                  - /
                  - - alias
                    - aws/s3  
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
            - !GetAtt
              - CloudFormationTrustRole
              - Arn
        PolicyName: !Join
          - '-'
          - - !Ref 'AWS::StackName'
            - CodePipelineRolePolicy
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CodePipeline
           
  SourceEvent:
    Type: AWS::Events::Rule  
    Properties:
      Description: Rule for Amazon CloudWatch Events to detect changes to the source repository and trigger pipeline execution
      EventPattern:
        detail:
          event:
          - referenceCreated
          - referenceUpdated
          referenceName:
          - dev
          referenceType:
          - branch
        detail-type:
        - CodeCommit Repository State Change
        resources:
        - !Join
          - ':'
          - - 'arn:aws:codecommit'
            - !Ref 'AWS::Region'
            - !Ref 'AWS::AccountId'
            - !Ref 'CodeCommitRepoName'
        source:
        - aws.codecommit
      Name: !Join
      - '-'
      - - !Ref 'AWS::StackName'
        - SourceEvent
      State: ENABLED
      Targets:
      - Arn: !Join
        - ':'
        - - arn
          - aws
          - codepipeline
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - ci-cd-pipeline
        Id: ProjectPipelineTarget
        RoleArn: !GetAtt 'SourceEventRole.Arn'

  SourceEventRole:
    Type: AWS::IAM::Role
    Description: IAM role to allow Amazon CloudWatch Events to trigger AWS CodePipeline execution
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Sid: 1
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
            - !Join
              - ':'
              - - arn
                - aws
                - codepipeline
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - ci-cd-pipeline
        PolicyName: !Join
          - '-'
          - - !Ref 'AWS::StackName'
            - CloudWatchEventPolicy
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CloudWatchEventRule
          
  CloudFormationTrustRole:
    Type: AWS::IAM::Role      
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - String
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
      RoleName: !Join
        - '-'
        -  - !Ref 'AWS::StackName'
           - CloudFormation
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - iam:CreateRole
            - iam:AttachRolePolicy
            - iam:PutRolePolicy
            - iam:PassRole
            - iam:DetachRolePolicy
            - iam:ListRolePolicies
            - iam:GetRole
            - iam:DeleteRolePolicy
            - iam:UpdateRoleDescription
            - iam:ListRoles
            - iam:DeleteRole
            - iam:GetRolePolicy
            - iam:CreateInstanceProfile
            - iam:AddRoleToInstanceProfile
            - iam:DeleteInstanceProfile
            - iam:GetInstanceProfile
            - iam:ListInstanceProfiles
            - iam:ListInstanceProfilesForRole
            - iam:RemoveRoleFromInstanceProfile
            Effect: Allow
            Resource:
            - !Sub "arn:aws:iam::*:role/${AWS::StackName}*"
            - !Sub "arn:aws:iam::*:instance-profile/${AWS::StackName}*"
          - Action:
            - ssm:GetParameters
            - autoscaling:*
            - ec2:*
            - codedeploy:*
            - elasticloadbalancing:*
            Effect: Allow
            Resource: '*'
        PolicyName: !Join
          - '-'
          -  - !Ref 'AWS::StackName'
             - CloudFormationRolePolicy
      
